---
import '../../styles/global.css'; // Added import for global.css
// Import components
import Navbar from "../components/Navbar";
import I18nLoader from "../components/I18nLoader";
import ErrorBoundary from "../components/ErrorBoundary";
import SkipToContent from "../components/SkipToContent";
import A11yAnnouncer from "../components/A11yAnnouncer";
import LanguageAlternates from "../components/LanguageAlternates";

// Define props interface
export interface Props {
  title?: string;
  description?: string;
  lang?: string;
  ogImage?: string;
  canonicalUrl?: string;
  alternateUrls?: {
    en?: string;
    es?: string;
    fr?: string;
  };
}

// Destructure props with defaults
const {
  title = "Oriol Macias - Software Developer CV & Portfolio",
  description = "Professional CV for Oriol Macias, a Software Developer specialized in backend development, industrial protocols integration, and data center infrastructure.",
  lang = "en",
  ogImage = "/images/oriol_macias.jpg",
  canonicalUrl = "https://oriolmacias.dev/",
  alternateUrls = {},
} = Astro.props;

// Construct full canonical URL based on current page path
const fullCanonicalUrl = canonicalUrl.startsWith("http")
  ? canonicalUrl
  : new URL(Astro.url.pathname, "https://oriolmacias.dev").href;
---

<!doctype html>
<html lang={lang} class="dark" dir="ltr">
  <head>
    <link
      rel="preload"
      as="image"
      href="/images/oriol_macias-sm.avif"
      imagesrcset="
      /images/oriol_macias-sm.avif 400w,
      /images/oriol_macias-md.avif 800w,
      /images/oriol_macias-lg.avif 1200w
    "
    />
    <link
      rel="preload"
      as="image"
      href="/images/oriol_macias-640.avif"
      imagesrcset="
      /images/oriol_macias-192.avif 192w,
      /images/oriol_macias-320.avif 320w,
      /images/oriol_macias-640.avif 640w,
      /images/oriol_macias-960.avif 960w,
      /images/oriol_macias-1280.avif 1280w
    "
      imagesizes="(max-width: 767px) 100vw, 400px"
      fetchpriority="high"
    />

    <link
      rel="preload"
      as="font"
      href="/styles/fonts/fa-solid-900.woff2"
      type="font/woff2"
      crossorigin="anonymous"
    />

    <script src="/mobile-optimizations.js" defer></script>

    <script src="/scripts/font-awesome-loader.js" defer></script>

    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <link rel="icon" href="/favicon.png" type="image/png" />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/icons/favicon-180.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/icons/favicon-32.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/icons/favicon-16.png"
    />
    <link rel="manifest" href="/manifest.json" />
    <meta name="theme-color" content="#D83333" />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- Basic meta tags -->
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="author" content="Oriol Macias" />
    <link rel="canonical" href={fullCanonicalUrl} />

    <!-- Enlaces hreflang corregidos -->
    <LanguageAlternates
      currentLang={lang}
      currentPath={Astro.url.pathname}
      client:load
    />

    <!-- Original CLS fixes block removed, its content will be merged below -->

    <!-- CSS de correcciones combinadas de accesibilidad y CLS -->
    <!-- <link rel="stylesheet" href="/styles/combined.css" /> --> <!-- Removed -->

    <!-- Alternate language versions -->
    {
      alternateUrls.en && (
        <link rel="alternate" hreflang="en" href={alternateUrls.en} />
      )
    }
    {
      alternateUrls.es && (
        <link rel="alternate" hreflang="es" href={alternateUrls.es} />
      )
    }
    {
      alternateUrls.fr && (
        <link rel="alternate" hreflang="fr" href={alternateUrls.fr} />
      )
    }
    <link
      rel="alternate"
      hreflang="x-default"
      href="https://oriolmacias.dev/"
    />

    <!-- Accessibility & Device Support -->
    <meta name="color-scheme" content="light dark" />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: light)"
      content="#ffffff"
    />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: dark)"
      content="#121620"
    />

    <!-- Open Graph / Social Media -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={fullCanonicalUrl} />
    <meta property="og:image" content={ogImage} />
    <meta property="og:type" content="website" />
    <meta property="og:locale" content={lang} />
    {lang === "es" && <meta property="og:locale:alternate" content="es_ES" />}
    {lang === "fr" && <meta property="og:locale:alternate" content="fr_FR" />}

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImage} />

    <!-- Favicon and PWA -->
    <meta name="generator" content={Astro.generator} />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="theme-color" content="#D83333" />
    <link rel="manifest" href="/manifest.json" />
    <link rel="apple-touch-icon" href="/icons/favicon.svg" />

    <!-- Preload critical assets -->
    <link
      rel="preload"
      href="/styles/fonts/fa-solid-900.woff2"
      as="font"
      type="font/woff2"
      crossorigin="anonymous"
    />
    <link
      rel="preload"
      href="/styles/fonts/fa-brands-400.woff2"
      as="font"
      type="font/woff2"
      crossorigin="anonymous"
    />

    <!-- Font Awesome CSS -->
    <link rel="stylesheet" href="/styles/font-awesome-fallback.css" />

    <!-- Critical Font Awesome styles inlined for faster rendering -->
    <style is:inline>
      /* Core Font Awesome styles for immediate icon rendering */
      @font-face {
        font-family: "Font Awesome 5 Free";
        font-style: normal;
        font-weight: 900;
        font-display: swap;
        src: url("/styles/fonts/fa-solid-900.woff2") format("woff2");
      }

      @font-face {
        font-family: "Font Awesome 5 Brands";
        font-style: normal;
        font-weight: 400;
        font-display: swap;
        src: url("/styles/fonts/fa-brands-400.woff2") format("woff2");
      }

      .fas,
      .fa-solid {
        font-family: "Font Awesome 5 Free";
        font-weight: 900;
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: inline-block;
        font-style: normal;
        font-variant: normal;
        text-rendering: auto;
        line-height: 1;
      }

      .fab,
      .fa-brands {
        font-family: "Font Awesome 5 Brands";
        font-weight: 400;
        -moz-osx-font-smoothing: grayscale;
        -webkit-font-smoothing: antialiased;
        display: inline-block;
        font-style: normal;
        font-variant: normal;
        text-rendering: auto;
        line-height: 1;
      }

      /* Estilos críticos para el navbar sticky */
      nav,
      header nav,
      nav[role="navigation"],
      header[role="banner"] {
        position: -webkit-sticky !important;
        position: sticky !important;
        top: 0 !important;
        z-index: 50 !important;
      }

      /* Asegurar que el header no interfiera con el posicionamiento */
      header[role="banner"] {
        display: block;
        position: static;
        z-index: auto;
      }

      /* Sin márgenes o paddings que afecten al navbar */
      header[role="banner"] {
        margin: 0;
        padding: 0;
      }
    </style>

    <!-- Cargar el sistema unificado de internacionalización -->
    <script is:inline src="/scripts/i18n.js" onerror="window.i18nFailed = true;"
    ></script>
    <script is:inline src="/scripts/i18n-enhanced-fix.js"></script>

    <!-- Establecer idioma actual para scripts cliente y depuración -->
    <script is:inline define:vars={{ currentLang: lang }}>
      // Establecer el idioma actual en una variable global
      window.CURRENT_LANGUAGE = currentLang;
      console.log("Current language set to:", window.CURRENT_LANGUAGE);

      // Inicializar sistema i18n si está disponible
      document.addEventListener("DOMContentLoaded", () => {
        if (window.i18n && typeof window.i18n.init === "function") {
          window.i18n.init(currentLang);
        } else {
          // Función simplificada como fallback si el script i18n.js no se ha cargado
          window.t = function (key) {
            // Esta es una función de fallback mínima
            const key_parts = key.split(".");
            const last_part = key_parts[key_parts.length - 1];

            // Si hay traducciones disponibles, intentar buscar la clave
            if (window.TRANSLATIONS && window.TRANSLATIONS[currentLang]) {
              let result = window.TRANSLATIONS[currentLang];
              for (const part of key_parts) {
                if (result && typeof result === "object" && part in result) {
                  result = result[part];
                } else {
                  return last_part; // No se encontró la clave completa
                }
              }
              return result || last_part;
            }

            return last_part;
          };
        }
      });

      // Objeto global para almacenar traducciones una vez cargadas
      window.TRANSLATIONS = window.TRANSLATIONS || {};
    </script>

    <!-- Theme initialization script -->
    <script is:inline>
      (function () {
        // Get stored theme or default to dark
        const storedTheme = localStorage.getItem("theme") || "dark";

        // Apply theme class
        document.documentElement.classList.add(storedTheme);
      })();
    </script>

    <!-- Print styles for PDF download capability -->
    <style is:inline>
      @media print {
        nav,
        footer,
        button:not(#cv-download-button),
        .no-print {
          display: none !important;
        }

        body {
          background-color: white !important;
          color: black !important;
        }

        @page {
          size: A4 portrait;
          margin: 1.5cm;
        }

        main {
          padding: 0 !important;
        }

        /* Remove shadows and hover effects */
        * {
          box-shadow: none !important;
          transition: none !important;
        }

        /* Adjust colors for printing */
        .dark\:text-dark-text,
        .dark\:text-dark-text-secondary,
        .text-light-text,
        .text-light-text-secondary {
          color: #000 !important;
        }

        .dark\:bg-dark-surface,
        .dark\:bg-dark-secondary,
        .bg-light-surface,
        .bg-light-secondary {
          background-color: #fff !important;
        }

        /* Ensure all sections are visible */
        .opacity-0 {
          opacity: 1 !important;
        }

        /* Maintain the red accent for visual identity */
        .border-brand-red {
          border-color: #d83333 !important;
        }

        /* Ensure all text is visible */
        .text-brand-red {
          color: #d83333 !important;
        }

        /* Ensure backgrounds print correctly */
        .bg-brand-red {
          background-color: #d83333 !important;
        }
      }
    </style>

    <!-- Inlined Critical Mobile CSS & CLS Fixes -->
    <style is:inline>
      /* Estilos críticos para prevenir CLS */
      #skills,
      .nav-container,
      .profile-image-container {
        content-visibility: auto;
      }

      @media (max-width: 767px) {
        /* public/styles/critical-mobile.css - Estilos críticos para renderizado inicial en móvil */

        /* Estilos básicos del cuerpo */
        body {
            margin: 0;
            font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
            background-color: #ffffff;
            color: #1f2937;
        }

        .dark body {
            background-color: #121620;
            color: #f9fafb;
        }

        /* Estilos críticos para el header */
        header {
            position: sticky;
            top: 0;
            z-index: 50;
            background-color: #ffffff;
            border-bottom: 1px solid #e5e7eb;
            padding: 0.75rem 0;
        }

        .dark header {
            background-color: #121620;
            border-color: #374151;
        }

        /* Estilos básicos de contenedor */
        .container {
            width: 100%;
            margin-left: auto;
            margin-right: auto;
            padding-left: 1rem;
            padding-right: 1rem;
        }

        /* Estilos básicos para la imagen de perfil */
        .profile-image {
            width: 100%;
            height: auto;
            object-fit: cover;
        }

        /* Estilos de texto principales */
        h1 {
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        h2 {
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        p {
            margin-bottom: 1rem;
        }

        /* Color de marca */
        .text-brand-red {
            color: #D83333;
        }

        .bg-brand-red {
            background-color: #D83333;
        }

        .dark .text-brand-red {
            color: #FF6B6B;
        }

        .dark .bg-brand-red {
            background-color: #D83333;
        }
      }
    </style>

    <!-- Añadir al <head> de src/layouts/Layout.astro justo antes del cierre </head> -->
    <script is:inline>
      // Script de verificación y corrección de Font Awesome
      (function () {
        // Comprobar si los iconos están cargados correctamente
        function checkIcons() {
          // Verificar si algún icono Font Awesome está visible
          const testIcon = document.createElement("i");
          testIcon.className = "fas fa-user";
          testIcon.style.visibility = "hidden";
          document.body.appendChild(testIcon);

          // Obtener el estilo computado
          const computedStyle = window.getComputedStyle(testIcon);
          const fontFamily = computedStyle.getPropertyValue("font-family");
          const content = computedStyle.getPropertyValue("content");

          // Limpiar elemento de prueba
          document.body.removeChild(testIcon);

          // Si no hay contenido o la fuente no es correcta, forzar carga de emergencia
          return content !== "none" && fontFamily.includes("Font Awesome");
        }

        // Forzar carga de CDN como último recurso si los iconos no aparecen
        window.addEventListener("DOMContentLoaded", function () {
          // Dar tiempo a que carguen las fuentes normalmente
          setTimeout(function () {
            if (!checkIcons()) {
              console.warn(
                "Font Awesome no cargó correctamente. Aplicando solución de emergencia...",
              );

              // Inyectar definiciones de fuentes directamente
              const style = document.createElement("style");
              style.textContent = `
            @font-face {
              font-family: 'Font Awesome 5 Free';
              font-style: normal;
              font-weight: 900;
              font-display: block;
              src: url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/webfonts/fa-solid-900.woff2') format('woff2');
            }
            
            @font-face {
              font-family: 'Font Awesome 5 Brands';
              font-style: normal;
              font-weight: 400;
              font-display: block;
              src: url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/webfonts/fa-brands-400.woff2') format('woff2');
            }
            
            /* Asegurar estilos básicos */
            .fas, .fa-solid {
              font-family: 'Font Awesome 5 Free' !important;
              font-weight: 900 !important;
            }
            
            .fab, .fa-brands {
              font-family: 'Font Awesome 5 Brands' !important;
              font-weight: 400 !important;
            }
          `;
              document.head.appendChild(style);

              // Cargar versión optimizada local como respaldo
              const link = document.createElement("link");
              link.rel = "stylesheet";
              link.href = "/styles/font-awesome-optimized.css";
              document.head.appendChild(link);
            }
          }, 500); // Esperar 500ms para comprobar
        });
      })();
    </script>
    <!-- <link rel="stylesheet" href="/styles/critical-mobile.css" media="(max-width: 767px)" /> --> <!-- Removed -->

    <!-- <link rel="stylesheet" href="/styles/combined.css" /> --> <!-- Removed -->

    <link rel="stylesheet" href="/styles/font-awesome-optimized.css" />
    <link rel="stylesheet" href="/styles/enhanced-contrast-fix.css" /> {/* Added contrast fix CSS */}

    <script is:inline src="/scripts/react-error-recovery.js"></script>
  </head>
  <body
    class="min-h-screen bg-light-primary dark:bg-dark-primary text-light-text dark:text-dark-text font-sans body-transition"
  >
    <div id="app-root">
      <!-- Accessibility components -->
      <SkipToContent client:load />
      <A11yAnnouncer client:load />

      <I18nLoader client:only>
        <!-- Navbar with ErrorBoundary -->
        <header role="banner">
          <ErrorBoundary>
            <Navbar client:load />
          </ErrorBoundary>
        </header>

        <!-- Main content with ARIA landmark -->
        <main
          id="cv-content"
          role="main"
          class="container mx-auto px-4 py-8 max-w-5xl"
        >
          <ErrorBoundary>
            <slot />
          </ErrorBoundary>
        </main>

        <!-- Footer with ErrorBoundary -->
        <ErrorBoundary>
          <footer
            role="contentinfo"
            class="py-8 border-t border-light-border dark:border-dark-border bg-light-primary dark:bg-dark-primary transition-colors duration-300"
          >
            <div class="container mx-auto px-4 max-w-5xl">
              <div
                class="flex flex-col md:flex-row justify-between items-center gap-4"
              >
                <div class="flex items-center gap-2">
                  <div
                    class="h-6 w-6 bg-brand-red rounded-none flex items-center justify-center"
                    aria-hidden="true"
                  >
                    <span class="text-white font-bold text-xs">OM</span>
                  </div>
                  <p
                    class="text-sm text-light-text-secondary dark:text-dark-text-secondary"
                  >
                    © {new Date().getFullYear()} Oriol Macias
                  </p>
                </div>
                <div class="flex items-center gap-6">
                  <a
                    href="#top"
                    class="text-sm flex items-center text-light-text-secondary dark:text-dark-text-secondary hover:text-brand-red dark:hover:text-brand-red transition-colors"
                    aria-label={lang === "es"
                      ? "Volver al inicio de la página"
                      : lang === "fr"
                        ? "Retourner en haut de la page"
                        : "Return to top of page"}
                  >
                    <i class="fas fa-arrow-up mr-2 text-xs" aria-hidden="true"
                    ></i>
                    {
                      lang === "es"
                        ? "Volver arriba"
                        : lang === "fr"
                          ? "Retour en haut"
                          : "Back to top"
                    }
                  </a>
                </div>
                <button
                  id="cv-download-button"
                  class="text-xs h-8 flex items-center px-3 py-1 border border-brand-red text-brand-red dark:text-brand-red hover:bg-brand-red hover:text-white dark:hover:bg-brand-red dark:hover:text-white transition-colors duration-300"
                  onclick="window.print()"
                  aria-label={lang === "es"
                    ? "Descargar CV en formato PDF"
                    : lang === "fr"
                      ? "Télécharger CV en format PDF"
                      : "Download CV in PDF format"}
                >
                  <i class="fas fa-download mr-2" aria-hidden="true"></i>
                  {
                    lang === "es"
                      ? "Descargar CV"
                      : lang === "fr"
                        ? "Télécharger CV"
                        : "Download CV"
                  }
                </button>
              </div>
            </div>
          </footer>
        </ErrorBoundary>
      </I18nLoader>
    </div>
  </body><!-- Script for smooth scrolling to sections -->
  <script is:inline>
    document.addEventListener("DOMContentLoaded", () => {
      // Smooth scroll for anchors
      document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
        anchor.addEventListener("click", function (e) {
          const targetId = this.getAttribute("href").substring(1);
          if (!targetId) return; // Avoid errors with href="#"

          const targetElement = document.getElementById(targetId);

          if (targetElement) {
            e.preventDefault();
            const navbarHeight = 80; // Estimated navbar height
            const position =
              targetElement.getBoundingClientRect().top +
              window.pageYOffset -
              navbarHeight;

            window.scrollTo({
              top: position,
              behavior: "smooth",
            });

            // Announce to screen readers (if function is available)
            if (window.announceToScreenReader) {
              const elementTitle =
                targetElement.querySelector("h2, h3")?.textContent || targetId;
              window.announceToScreenReader(
                `Navigated to ${elementTitle} section`,
              );
            }

            // Set focus to the target element (for keyboard accessibility)
            targetElement.setAttribute("tabindex", "-1");
            targetElement.focus({ preventScroll: true });

            // Remove tabindex after blur to avoid persistent tab stops
            targetElement.addEventListener("blur", function onBlur() {
              targetElement.removeAttribute("tabindex");
              targetElement.removeEventListener("blur", onBlur);
            });
          }
        });
      });
    });
  </script>

  <!-- Update translated elements in the DOM when translations load -->
  <script is:inline>
    document.addEventListener("translationsLoaded", () => {
      // Actualizar elementos con atributo data-i18n
      if (window.i18n && typeof window.i18n.updateElements === "function") {
        window.i18n.updateElements();
      } else {
        // Fallback manual implementation
        document.querySelectorAll("[data-i18n]").forEach((element) => {
          const key = element.getAttribute("data-i18n");
          if (key && typeof window.t === "function") {
            element.textContent = window.t(key);
          }
        });
      }

      // Announce to screen readers that translations are loaded
      if (window.announceToScreenReader) {
        const lang = window.CURRENT_LANGUAGE || "en";
        const langNames = {
          en: "English",
          es: "Spanish",
          fr: "French",
        };
        window.announceToScreenReader(
          `Content now available in ${langNames[lang] || lang}`,
        );
      }
    });
  </script>

  <!-- Service Worker Registration - Only for production -->
  <script is:inline>
    // Only register in production (not local)
    if (
      window.location.hostname !== "localhost" &&
      window.location.hostname !== "127.0.0.1" &&
      "serviceWorker" in navigator
    ) {
      window.addEventListener("load", () => {
        navigator.serviceWorker
          .register("/sw.js?v=" + new Date().getTime())
          .then((registration) => {
            console.log("Service Worker registered successfully");
          })
          .catch((error) => {
            console.error("Service Worker registration failed:", error);
          });
      });
    }
  </script>
</html>

<!-- Removed <style is:global>@import "../styles/global.css";</style> -->
